// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module wlsb_get_minkp_32bits_wlsb_get_minkp_32bits_Pipeline_VITIS_LOOP_16_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sub_ln29,
        icmp_ln32_1,
        add_ln30_4,
        value_r,
        icmp_ln26,
        sub_ln29_1,
        icmp_ln32_5,
        add_ln30_5,
        icmp_ln26_1,
        sub_ln29_2,
        icmp_ln32_8,
        add_ln30_6,
        icmp_ln26_2,
        sub_ln29_3,
        icmp_ln32_10,
        add_ln30_7,
        icmp_ln26_3,
        k_out,
        k_out_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] sub_ln29;
input  [0:0] icmp_ln32_1;
input  [31:0] add_ln30_4;
input  [31:0] value_r;
input  [0:0] icmp_ln26;
input  [31:0] sub_ln29_1;
input  [0:0] icmp_ln32_5;
input  [31:0] add_ln30_5;
input  [0:0] icmp_ln26_1;
input  [31:0] sub_ln29_2;
input  [0:0] icmp_ln32_8;
input  [31:0] add_ln30_6;
input  [0:0] icmp_ln26_2;
input  [31:0] sub_ln29_3;
input  [0:0] icmp_ln32_10;
input  [31:0] add_ln30_7;
input  [0:0] icmp_ln26_3;
output  [4:0] k_out;
output   k_out_ap_vld;
output  [1:0] ap_return;

reg ap_idle;
reg k_out_ap_vld;
reg[1:0] ap_return;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] and_ln32_fu_270_p2;
wire   [0:0] and_ln33_1_fu_288_p2;
wire   [0:0] and_ln32_1_fu_324_p2;
wire   [0:0] and_ln33_3_fu_342_p2;
wire   [0:0] and_ln32_2_fu_378_p2;
wire   [0:0] and_ln33_5_fu_396_p2;
wire   [0:0] and_ln32_3_fu_432_p2;
wire   [0:0] and_ln33_7_fu_450_p2;
wire   [0:0] icmp_ln26_3_read_read_fu_82_p2;
wire   [0:0] icmp_ln26_2_read_read_fu_106_p2;
wire   [0:0] icmp_ln26_1_read_read_fu_130_p2;
wire   [0:0] icmp_ln26_read_read_fu_154_p2;
wire   [0:0] icmp_ln16_fu_218_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [1:0] ap_phi_mux_UnifiedRetVal_phi_fu_194_p6;
reg   [5:0] k_fu_78;
wire   [5:0] k_2_fu_224_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_k_1;
wire   [31:0] k_cast8_fu_230_p1;
wire   [31:0] shl_ln18_fu_234_p2;
wire   [31:0] add_ln30_fu_240_p2;
wire   [0:0] icmp_ln32_fu_246_p2;
wire   [0:0] icmp_ln32_2_fu_258_p2;
wire   [0:0] xor_ln32_fu_252_p2;
wire   [0:0] or_ln32_fu_264_p2;
wire   [0:0] and_ln33_fu_282_p2;
wire   [0:0] icmp_ln33_fu_276_p2;
wire   [31:0] add_ln30_1_fu_294_p2;
wire   [0:0] icmp_ln32_3_fu_300_p2;
wire   [0:0] icmp_ln32_4_fu_312_p2;
wire   [0:0] xor_ln32_1_fu_306_p2;
wire   [0:0] or_ln32_1_fu_318_p2;
wire   [0:0] and_ln33_2_fu_336_p2;
wire   [0:0] icmp_ln33_1_fu_330_p2;
wire   [31:0] add_ln30_2_fu_348_p2;
wire   [0:0] icmp_ln32_6_fu_354_p2;
wire   [0:0] icmp_ln32_7_fu_366_p2;
wire   [0:0] xor_ln32_2_fu_360_p2;
wire   [0:0] or_ln32_2_fu_372_p2;
wire   [0:0] and_ln33_4_fu_390_p2;
wire   [0:0] icmp_ln33_2_fu_384_p2;
wire   [31:0] add_ln30_3_fu_402_p2;
wire   [0:0] icmp_ln32_9_fu_408_p2;
wire   [0:0] icmp_ln32_11_fu_420_p2;
wire   [0:0] xor_ln32_3_fu_414_p2;
wire   [0:0] or_ln32_3_fu_426_p2;
wire   [0:0] and_ln33_6_fu_444_p2;
wire   [0:0] icmp_ln33_3_fu_438_p2;
reg   [1:0] ap_return_preg;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
reg    ap_condition_195;
reg    ap_condition_213;
reg    ap_condition_253;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_return_preg = 2'd0;
#0 ap_done_reg = 1'b0;
end

wlsb_get_minkp_32bits_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_exit_ready == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 2'd0;
    end else begin
        if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & ((icmp_ln16_fu_218_p2 == 1'd1) | (((((((((((((((((icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2)) | ((1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1)))))) begin
            ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_194_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((1'b1 == ap_condition_253)) begin
            k_fu_78 <= k_2_fu_224_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_78 <= 6'd0;
        end
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & ((icmp_ln16_fu_218_p2 == 1'd1) | (((((((((((((((((icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2)) | ((1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1)))))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_loop_exit_ready == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        if ((1'b1 == ap_condition_213)) begin
            ap_phi_mux_UnifiedRetVal_phi_fu_194_p6 = 2'd2;
        end else if ((1'b1 == ap_condition_195)) begin
            ap_phi_mux_UnifiedRetVal_phi_fu_194_p6 = 2'd1;
        end else if ((icmp_ln16_fu_218_p2 == 1'd1)) begin
            ap_phi_mux_UnifiedRetVal_phi_fu_194_p6 = 2'd0;
        end else begin
            ap_phi_mux_UnifiedRetVal_phi_fu_194_p6 = 'bx;
        end
    end else begin
        ap_phi_mux_UnifiedRetVal_phi_fu_194_p6 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & ((icmp_ln16_fu_218_p2 == 1'd1) | (((((((((((((((((icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2)) | ((1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1)))))) begin
        ap_return = ap_phi_mux_UnifiedRetVal_phi_fu_194_p6;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_k_1 = 6'd0;
    end else begin
        ap_sig_allocacmp_k_1 = k_fu_78;
    end
end

always @ (*) begin
    if ((((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (((((((((icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0)) | ((icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (icmp_ln16_fu_218_p2 == 1'd0)))) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (((((((((icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0)) | ((icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (icmp_ln16_fu_218_p2 == 1'd0)))) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln16_fu_218_p2 == 1'd1)))) begin
        k_out_ap_vld = 1'b1;
    end else begin
        k_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln30_1_fu_294_p2 = (add_ln30_5 + shl_ln18_fu_234_p2);

assign add_ln30_2_fu_348_p2 = (add_ln30_6 + shl_ln18_fu_234_p2);

assign add_ln30_3_fu_402_p2 = (add_ln30_7 + shl_ln18_fu_234_p2);

assign add_ln30_fu_240_p2 = (add_ln30_4 + shl_ln18_fu_234_p2);

assign and_ln32_1_fu_324_p2 = (xor_ln32_1_fu_306_p2 & or_ln32_1_fu_318_p2);

assign and_ln32_2_fu_378_p2 = (xor_ln32_2_fu_360_p2 & or_ln32_2_fu_372_p2);

assign and_ln32_3_fu_432_p2 = (xor_ln32_3_fu_414_p2 & or_ln32_3_fu_426_p2);

assign and_ln32_fu_270_p2 = (xor_ln32_fu_252_p2 & or_ln32_fu_264_p2);

assign and_ln33_1_fu_288_p2 = (icmp_ln33_fu_276_p2 & and_ln33_fu_282_p2);

assign and_ln33_2_fu_336_p2 = (icmp_ln32_5 & icmp_ln32_4_fu_312_p2);

assign and_ln33_3_fu_342_p2 = (icmp_ln33_1_fu_330_p2 & and_ln33_2_fu_336_p2);

assign and_ln33_4_fu_390_p2 = (icmp_ln32_8 & icmp_ln32_7_fu_366_p2);

assign and_ln33_5_fu_396_p2 = (icmp_ln33_2_fu_384_p2 & and_ln33_4_fu_390_p2);

assign and_ln33_6_fu_444_p2 = (icmp_ln32_11_fu_420_p2 & icmp_ln32_10);

assign and_ln33_7_fu_450_p2 = (icmp_ln33_3_fu_438_p2 & and_ln33_6_fu_444_p2);

assign and_ln33_fu_282_p2 = (icmp_ln32_2_fu_258_p2 & icmp_ln32_1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

always @ (*) begin
    ap_condition_195 = (((((((((icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0)) | ((icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (1'd0 == and_ln33_7_fu_450_p2) & (1'd0 == and_ln32_3_fu_432_p2) & (icmp_ln16_fu_218_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_213 = (((((((((icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0)) | ((icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_1_fu_288_p2) & (1'd0 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_3_fu_342_p2) & (1'd0 == and_ln32_1_fu_324_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (1'd0 == and_ln33_5_fu_396_p2) & (1'd0 == and_ln32_2_fu_378_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd1) & (icmp_ln26_1_read_read_fu_130_p2 == 1'd1) & (icmp_ln26_2_read_read_fu_106_p2 == 1'd1) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd1) & (icmp_ln16_fu_218_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_253 = (((((((((1'd1 == and_ln32_3_fu_432_p2) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (icmp_ln16_fu_218_p2 == 1'd0)) | ((1'd1 == and_ln33_7_fu_450_p2) & (icmp_ln26_3_read_read_fu_82_p2 == 1'd0) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_2_read_read_fu_106_p2 == 1'd0) & (1'd1 == and_ln33_5_fu_396_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_2_read_read_fu_106_p2 == 1'd0) & (1'd1 == and_ln32_2_fu_378_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd0) & (1'd1 == and_ln33_3_fu_342_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_1_read_read_fu_130_p2 == 1'd0) & (1'd1 == and_ln32_1_fu_324_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd0) & (1'd1 == and_ln33_1_fu_288_p2) & (icmp_ln16_fu_218_p2 == 1'd0))) | ((icmp_ln26_read_read_fu_154_p2 == 1'd0) & (1'd1 == and_ln32_fu_270_p2) & (icmp_ln16_fu_218_p2 == 1'd0)));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln16_fu_218_p2 = ((ap_sig_allocacmp_k_1 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln26_1_read_read_fu_130_p2 = icmp_ln26_1;

assign icmp_ln26_2_read_read_fu_106_p2 = icmp_ln26_2;

assign icmp_ln26_3_read_read_fu_82_p2 = icmp_ln26_3;

assign icmp_ln26_read_read_fu_154_p2 = icmp_ln26;

assign icmp_ln32_11_fu_420_p2 = ((add_ln30_3_fu_402_p2 < value_r) ? 1'b1 : 1'b0);

assign icmp_ln32_2_fu_258_p2 = ((add_ln30_fu_240_p2 < value_r) ? 1'b1 : 1'b0);

assign icmp_ln32_3_fu_300_p2 = ((add_ln30_1_fu_294_p2 < sub_ln29_1) ? 1'b1 : 1'b0);

assign icmp_ln32_4_fu_312_p2 = ((add_ln30_1_fu_294_p2 < value_r) ? 1'b1 : 1'b0);

assign icmp_ln32_6_fu_354_p2 = ((add_ln30_2_fu_348_p2 < sub_ln29_2) ? 1'b1 : 1'b0);

assign icmp_ln32_7_fu_366_p2 = ((add_ln30_2_fu_348_p2 < value_r) ? 1'b1 : 1'b0);

assign icmp_ln32_9_fu_408_p2 = ((add_ln30_3_fu_402_p2 < sub_ln29_3) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_246_p2 = ((add_ln30_fu_240_p2 < sub_ln29) ? 1'b1 : 1'b0);

assign icmp_ln33_1_fu_330_p2 = ((sub_ln29_1 > add_ln30_1_fu_294_p2) ? 1'b1 : 1'b0);

assign icmp_ln33_2_fu_384_p2 = ((sub_ln29_2 > add_ln30_2_fu_348_p2) ? 1'b1 : 1'b0);

assign icmp_ln33_3_fu_438_p2 = ((sub_ln29_3 > add_ln30_3_fu_402_p2) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_276_p2 = ((sub_ln29 > add_ln30_fu_240_p2) ? 1'b1 : 1'b0);

assign k_2_fu_224_p2 = (ap_sig_allocacmp_k_1 + 6'd1);

assign k_cast8_fu_230_p1 = ap_sig_allocacmp_k_1;

assign k_out = ap_sig_allocacmp_k_1[4:0];

assign or_ln32_1_fu_318_p2 = (icmp_ln32_5 | icmp_ln32_4_fu_312_p2);

assign or_ln32_2_fu_372_p2 = (icmp_ln32_8 | icmp_ln32_7_fu_366_p2);

assign or_ln32_3_fu_426_p2 = (icmp_ln32_11_fu_420_p2 | icmp_ln32_10);

assign or_ln32_fu_264_p2 = (icmp_ln32_2_fu_258_p2 | icmp_ln32_1);

assign shl_ln18_fu_234_p2 = 32'd1 << k_cast8_fu_230_p1;

assign xor_ln32_1_fu_306_p2 = (icmp_ln32_3_fu_300_p2 ^ 1'd1);

assign xor_ln32_2_fu_360_p2 = (icmp_ln32_6_fu_354_p2 ^ 1'd1);

assign xor_ln32_3_fu_414_p2 = (icmp_ln32_9_fu_408_p2 ^ 1'd1);

assign xor_ln32_fu_252_p2 = (icmp_ln32_fu_246_p2 ^ 1'd1);

endmodule //wlsb_get_minkp_32bits_wlsb_get_minkp_32bits_Pipeline_VITIS_LOOP_16_1
