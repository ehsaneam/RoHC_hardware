// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="wlsb_get_minkp_16bits_wlsb_get_minkp_16bits,hls_ip_2022_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xqzu15eg-ffrb1156-2-i,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.496500,HLS_SYN_LAT=23,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=212,HLS_SYN_LUT=878,HLS_VERSION=2022_2}" *)

module wlsb_get_minkp_16bits (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        wlsb_count,
        wlsb_window_value_address0,
        wlsb_window_value_ce0,
        wlsb_window_value_q0,
        wlsb_window_value_address1,
        wlsb_window_value_ce1,
        wlsb_window_value_q1,
        wlsb_window_used_address0,
        wlsb_window_used_ce0,
        wlsb_window_used_q0,
        wlsb_window_used_address1,
        wlsb_window_used_ce1,
        wlsb_window_used_q1,
        value_r,
        p,
        ap_return
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] wlsb_count;
output  [5:0] wlsb_window_value_address0;
output   wlsb_window_value_ce0;
input  [31:0] wlsb_window_value_q0;
output  [5:0] wlsb_window_value_address1;
output   wlsb_window_value_ce1;
input  [31:0] wlsb_window_value_q1;
output  [5:0] wlsb_window_used_address0;
output   wlsb_window_used_ce0;
input  [31:0] wlsb_window_used_q0;
output  [5:0] wlsb_window_used_address1;
output   wlsb_window_used_ce1;
input  [31:0] wlsb_window_used_q1;
input  [15:0] value_r;
input  [31:0] p;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] wlsb_window_value_address0;
reg wlsb_window_value_ce0;
reg[5:0] wlsb_window_value_address1;
reg wlsb_window_value_ce1;
reg[5:0] wlsb_window_used_address0;
reg wlsb_window_used_ce0;
reg[5:0] wlsb_window_used_address1;
reg wlsb_window_used_ce1;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln9_fu_212_p2;
reg   [0:0] icmp_ln9_reg_337;
wire   [15:0] empty_fu_218_p1;
reg   [15:0] empty_reg_341;
wire   [0:0] grp_fu_200_p2;
reg   [0:0] icmp_ln25_reg_359;
wire    ap_CS_fsm_state2;
wire   [0:0] grp_fu_206_p2;
reg   [0:0] icmp_ln25_1_reg_364;
reg   [0:0] icmp_ln25_2_reg_389;
wire    ap_CS_fsm_state3;
reg   [0:0] icmp_ln25_3_reg_394;
wire   [15:0] trunc_ln27_fu_222_p1;
reg   [15:0] trunc_ln27_reg_399;
wire   [15:0] sub_ln28_2_fu_230_p2;
reg   [15:0] sub_ln28_2_reg_404;
wire   [15:0] sub_ln28_3_fu_235_p2;
reg   [15:0] sub_ln28_3_reg_421;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln31_10_fu_240_p2;
reg   [0:0] icmp_ln31_10_reg_426;
wire   [0:0] icmp_ln31_8_fu_246_p2;
reg   [0:0] icmp_ln31_8_reg_431;
wire   [15:0] sub_ln28_1_fu_255_p2;
reg   [15:0] sub_ln28_1_reg_436;
wire   [0:0] icmp_ln31_5_fu_261_p2;
reg   [0:0] icmp_ln31_5_reg_441;
wire   [15:0] sub_ln28_fu_271_p2;
reg   [15:0] sub_ln28_reg_446;
wire   [0:0] icmp_ln31_1_fu_277_p2;
reg   [0:0] icmp_ln31_1_reg_451;
wire   [15:0] add_ln29_fu_283_p2;
reg   [15:0] add_ln29_reg_456;
wire   [15:0] add_ln29_6_fu_290_p2;
reg   [15:0] add_ln29_6_reg_461;
wire   [15:0] add_ln29_5_fu_296_p2;
reg   [15:0] add_ln29_5_reg_466;
wire   [15:0] add_ln29_4_fu_303_p2;
reg   [15:0] add_ln29_4_reg_471;
wire   [0:0] grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_return;
reg   [0:0] targetBlock_reg_476;
wire    ap_CS_fsm_state5;
wire    grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start;
wire    grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_done;
wire    grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_idle;
wire    grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_ready;
wire   [5:0] grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_wlsb_window_used_address0;
wire    grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_wlsb_window_used_ce0;
wire   [3:0] grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_k_out;
wire    grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_k_out_ap_vld;
wire   [4:0] zext_ln47_fu_313_p1;
reg   [4:0] ap_phi_mux_bits_nr_phi_fu_166_p6;
reg   [4:0] bits_nr_reg_162;
wire    ap_CS_fsm_state6;
reg    grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start_reg;
reg   [3:0] k_loc_fu_50;
wire   [15:0] trunc_ln27_1_fu_226_p1;
wire   [15:0] trunc_ln27_2_fu_251_p1;
wire   [15:0] trunc_ln27_3_fu_267_p1;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start_reg = 1'b0;
end

wlsb_get_minkp_16bits_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1 grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start),
    .ap_done(grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_done),
    .ap_idle(grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_idle),
    .ap_ready(grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_ready),
    .wlsb_window_used_address0(grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_wlsb_window_used_address0),
    .wlsb_window_used_ce0(grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_wlsb_window_used_ce0),
    .wlsb_window_used_q0(wlsb_window_used_q0),
    .sub_ln28(sub_ln28_reg_446),
    .icmp_ln31_1(icmp_ln31_1_reg_451),
    .add_ln29_4(add_ln29_4_reg_471),
    .value_r(value_r),
    .icmp_ln25(icmp_ln25_reg_359),
    .sub_ln28_1(sub_ln28_1_reg_436),
    .icmp_ln31_5(icmp_ln31_5_reg_441),
    .add_ln29_5(add_ln29_5_reg_466),
    .icmp_ln25_1(icmp_ln25_1_reg_364),
    .sub_ln28_2(sub_ln28_2_reg_404),
    .icmp_ln31_8(icmp_ln31_8_reg_431),
    .add_ln29_6(add_ln29_6_reg_461),
    .icmp_ln25_2(icmp_ln25_2_reg_389),
    .sub_ln28_3(sub_ln28_3_reg_421),
    .icmp_ln31_10(icmp_ln31_10_reg_426),
    .add_ln29_7(add_ln29_reg_456),
    .icmp_ln25_3(icmp_ln25_3_reg_394),
    .k_out(grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_k_out),
    .k_out_ap_vld(grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_k_out_ap_vld),
    .ap_return(grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start_reg <= 1'b1;
        end else if ((grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_ready == 1'b1)) begin
            grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln9_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((icmp_ln9_reg_337 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (targetBlock_reg_476 == 1'd1)))) begin
        bits_nr_reg_162 <= 5'd16;
    end else if (((icmp_ln9_reg_337 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (targetBlock_reg_476 == 1'd0))) begin
        bits_nr_reg_162 <= zext_ln47_fu_313_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln29_4_reg_471 <= add_ln29_4_fu_303_p2;
        add_ln29_5_reg_466 <= add_ln29_5_fu_296_p2;
        add_ln29_6_reg_461 <= add_ln29_6_fu_290_p2;
        add_ln29_reg_456 <= add_ln29_fu_283_p2;
        icmp_ln31_10_reg_426 <= icmp_ln31_10_fu_240_p2;
        icmp_ln31_1_reg_451 <= icmp_ln31_1_fu_277_p2;
        icmp_ln31_5_reg_441 <= icmp_ln31_5_fu_261_p2;
        icmp_ln31_8_reg_431 <= icmp_ln31_8_fu_246_p2;
        sub_ln28_1_reg_436 <= sub_ln28_1_fu_255_p2;
        sub_ln28_3_reg_421 <= sub_ln28_3_fu_235_p2;
        sub_ln28_reg_446 <= sub_ln28_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_341 <= empty_fu_218_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln25_1_reg_364 <= grp_fu_206_p2;
        icmp_ln25_reg_359 <= grp_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln25_2_reg_389 <= grp_fu_200_p2;
        icmp_ln25_3_reg_394 <= grp_fu_206_p2;
        sub_ln28_2_reg_404 <= sub_ln28_2_fu_230_p2;
        trunc_ln27_reg_399 <= trunc_ln27_fu_222_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln9_reg_337 <= icmp_ln9_fu_212_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_k_out_ap_vld == 1'b1))) begin
        k_loc_fu_50 <= grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_k_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        targetBlock_reg_476 <= grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_return;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_337 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        if ((targetBlock_reg_476 == 1'd1)) begin
            ap_phi_mux_bits_nr_phi_fu_166_p6 = 5'd16;
        end else if ((targetBlock_reg_476 == 1'd0)) begin
            ap_phi_mux_bits_nr_phi_fu_166_p6 = zext_ln47_fu_313_p1;
        end else begin
            ap_phi_mux_bits_nr_phi_fu_166_p6 = bits_nr_reg_162;
        end
    end else begin
        ap_phi_mux_bits_nr_phi_fu_166_p6 = bits_nr_reg_162;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        wlsb_window_used_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        wlsb_window_used_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        wlsb_window_used_address0 = grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_wlsb_window_used_address0;
    end else begin
        wlsb_window_used_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        wlsb_window_used_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        wlsb_window_used_address1 = 64'd0;
    end else begin
        wlsb_window_used_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        wlsb_window_used_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        wlsb_window_used_ce0 = grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_wlsb_window_used_ce0;
    end else begin
        wlsb_window_used_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        wlsb_window_used_ce1 = 1'b1;
    end else begin
        wlsb_window_used_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        wlsb_window_value_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        wlsb_window_value_address0 = 64'd2;
    end else begin
        wlsb_window_value_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        wlsb_window_value_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        wlsb_window_value_address1 = 64'd3;
    end else begin
        wlsb_window_value_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        wlsb_window_value_ce0 = 1'b1;
    end else begin
        wlsb_window_value_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        wlsb_window_value_ce1 = 1'b1;
    end else begin
        wlsb_window_value_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln9_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((icmp_ln9_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln29_4_fu_303_p2 = ($signed(sub_ln28_fu_271_p2) + $signed(16'd65535));

assign add_ln29_5_fu_296_p2 = ($signed(sub_ln28_1_fu_255_p2) + $signed(16'd65535));

assign add_ln29_6_fu_290_p2 = ($signed(sub_ln28_2_reg_404) + $signed(16'd65535));

assign add_ln29_fu_283_p2 = ($signed(sub_ln28_3_fu_235_p2) + $signed(16'd65535));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_return = ap_phi_mux_bits_nr_phi_fu_166_p6;

assign empty_fu_218_p1 = p[15:0];

assign grp_fu_200_p2 = ((wlsb_window_used_q1 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_206_p2 = ((wlsb_window_used_q0 == 32'd0) ? 1'b1 : 1'b0);

assign grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start = grp_wlsb_get_minkp_16bits_Pipeline_VITIS_LOOP_17_1_fu_176_ap_start_reg;

assign icmp_ln31_10_fu_240_p2 = ((sub_ln28_3_fu_235_p2 > value_r) ? 1'b1 : 1'b0);

assign icmp_ln31_1_fu_277_p2 = ((sub_ln28_fu_271_p2 > value_r) ? 1'b1 : 1'b0);

assign icmp_ln31_5_fu_261_p2 = ((sub_ln28_1_fu_255_p2 > value_r) ? 1'b1 : 1'b0);

assign icmp_ln31_8_fu_246_p2 = ((sub_ln28_2_reg_404 > value_r) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_212_p2 = ((wlsb_count == 8'd0) ? 1'b1 : 1'b0);

assign sub_ln28_1_fu_255_p2 = (trunc_ln27_2_fu_251_p1 - empty_reg_341);

assign sub_ln28_2_fu_230_p2 = (trunc_ln27_1_fu_226_p1 - empty_reg_341);

assign sub_ln28_3_fu_235_p2 = (trunc_ln27_reg_399 - empty_reg_341);

assign sub_ln28_fu_271_p2 = (trunc_ln27_3_fu_267_p1 - empty_reg_341);

assign trunc_ln27_1_fu_226_p1 = wlsb_window_value_q0[15:0];

assign trunc_ln27_2_fu_251_p1 = wlsb_window_value_q1[15:0];

assign trunc_ln27_3_fu_267_p1 = wlsb_window_value_q0[15:0];

assign trunc_ln27_fu_222_p1 = wlsb_window_value_q1[15:0];

assign zext_ln47_fu_313_p1 = k_loc_fu_50;

endmodule //wlsb_get_minkp_16bits
